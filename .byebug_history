c
get_base_url
c
Rails.application.secrets[:microsoft_password]
Rails.application.secrets[:secret_token]
Rails.application.secrets
Rails
c
cc
c
token_info
2296/60
Time.now.to_i - token_info[:exp]
token_info[:exp]
c
current_user
c
current_user
@current_user
current_user
c
@current_user
current_user
c
current_user
current_user = 1
current_user
c
current_user
c
n
c
n
parent
n
c
n
user
n
c
n
cur_user
n
user[:user_id]
n
token_info
c
cur_user
c
n
c
n
cur_user
n
c
token_info
n
c
cc
c
jwt_secret
JWT.decode(token, jwt_secret)
n
token
n
authToken
c
User.decode_jwt_token(a)
a = request.headers["Authorization"]
request.headers["Authorization"]
request.headers
token_info
c
user
n
cur_user
n
c
token_info
n
c
token_info
c
session[:token]
session
c
cur_user
c
cur_user
c
cur_user
c
cur_user
c
cur_user
c
cur_user
c
current_user.projects.pluck(:name)
current_user.projects[0].name
current_user.projects.name
current_user.projects
current_user.user_roles
current_user.roles
current_user
@users[0].
n
cur_user
n
c
User.find(138).id
User.find(138)[0].id
User.find(138)[0]
User.find(138)
current_user
c
n
c
current_user
@current_ability
c
session[:token]
c
resource.id
resource.user.id
User.new.id
User.new
resource.user.to_s
resource.user.id
resource.user
resource.user_id
resource.User id
resource.User
resource
c
session[:token]
session
c
resource.is_active
resource.is_active = false
resource.is_active
resource.name
resource
c
n
block_given?
c
after_sign_in_path_for
after_sign_in_path
after_sign
resource
c
p params
c
p params
c
@time_entry = TimeEntry.where(:week_id => params[:week_id])
asd
sfd
a
asdf
df
as
fd
as
sfd
asfda
fd
fas
qqaskjfdhjsa
a
aaaa
a
qqq
